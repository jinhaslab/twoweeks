[["shinyapps.html", "Chapter 21 shinyapps 21.1 설치 21.2 예제 21.3 예제 1 만들기 21.4 deploy shiny app (local server)", " Chapter 21 shinyapps 마크 다운에 이어서, R을 이용하여 결과물을 보여줄 때 많이 사용하는 프로그램은 샤이니 앱입니다. 샤이니 앱은 자체 tutorial이 너무 잘 되어 있어서 이를 보고 따라하는 것이 가장 도움이 될 것 같네요. 이번 시간에는 구조를 설명하는 것을 하고, 전반적인 것은 shinyapp 페이지를 이용하는 것으로 하겠습니다. 여기서는 샤이니앱으로 이러한 정도를 할 수 있다는 것을 알아 두시면 되겠습니다. 웹을 구동하려면, 서버와 DB를 이용하는 부분이 있어서 Dspub-Project에서 다루게 됩니다. 21.1 설치 설치는 shiny 페키지를 설치하는 것입니다. #install.packages(&#39;shiny&#39;) library(shiny) 21.2 예제 아래의 예제를 실행해 보세요 runExample(&quot;01_hello&quot;) 21.3 예제 1 만들기 21.3.1 구조 구조는 ui, sever로 구성됩니다. ui는 웹이 보여줄 부분, server는 그것이 작동하는 부분입니다. 아래와 같은 구조 입니다 . library(shiny) ui = fluidPage() server = function(input, output) shinyApp(ui = ui, server = server) 이에 sidebarLayout을 그 안에 sidebarPanel과 mainPanel을 만듭니다. 이제 구조는 완성이 되었습니다. library(shiny) ui = fluidPage( titlePanel(&quot;안녕하세요! 윤진하입니다.&quot;), sidebarLayout( sidebarPanel(), mainPanel() ) ) server = function(input, output){} shinyApp(ui = ui, server = server) 21.3.2 input, output input과 ouput을 만듭니다. input을 ui를 통해 받고 이를 server에 옮긴 후 ouput을 만들고, 다시 이를 ui에 output으로 보여주는 방식입니다. 우선 ui에 input을 만들겠습니다. 그래서 그래프를 그려 보도록 하겠습니다. library(shiny) ui &lt;- fluidPage( titlePanel(&quot;안녕하세요!&quot;), # 여러분 이름 넣으세요 sidebarLayout( sidebarPanel ( sliderInput( inputId = &quot;bins&quot;, # server input$bins label = &quot;Number of bins&quot;, min =1, max =50, value =30 ) ), mainPanel( plotOutput(outputId = &quot;disPlot&quot;) ) ) ) server &lt;- function(input, output){ output$disPlot &lt;- renderPlot({ hist(faithful$waiting, breaks = input$bins) }) } shinyApp(ui = ui, server = server) 21.3.3 과제 sliderInput의 내용을 수정하여 동영상과 같은 app을 만드세요. 21.4 deploy shiny app (local server) shiny로 만든 파일을 웹에 올리는 방법입니다. 우선 자신의 IP:3838 이 작동하는지 살펴 보겠습니다. 아래 그림이 나타나야 됩니다. 예전에 했었던 것이 기억이 나지 않으면 shiny server install을 다시 살펴봐 주세요. shiny server 2 위에서 실행했던 아래의 앱을 3개의 파일로 바꾸어 보겠습니다 global, ui, server 입니다. library(shiny) ui &lt;- fluidPage( titlePanel(&quot;안녕하세요!&quot;), # 여러분 이름 넣으세요 sidebarLayout( sidebarPanel ( sliderInput( inputId = &quot;bins&quot;, # server input$bins label = &quot;Number of bins&quot;, min =1, max =50, value =30 ) ), mainPanel( plotOutput(outputId = &quot;disPlot&quot;) ) ) ) server &lt;- function(input, output){ output$disPlot &lt;- renderPlot({ hist(faithful$waiting, breaks = input$bins) }) } shinyApp(ui = ui, server = server) testapp 이라는 폴더를 만들고 그 안에 global.R, ui.R, server.R 파일을 만듭니다. global.R 파일 library(shiny), eval = FALSE ui.R 파일 ui &lt;- fluidPage( titlePanel(&quot;안녕하세요!&quot;), # 여러분 이름 넣으세요 sidebarLayout( sidebarPanel ( sliderInput( inputId = &quot;bins&quot;, # server input$bins label = &quot;Number of bins&quot;, min =1, max =50, value =30 ) ), mainPanel( plotOutput(outputId = &quot;disPlot&quot;) ) ) ) server.R 파일 server &lt;- function(input, output){ output$disPlot &lt;- renderPlot({ hist(faithful$waiting, breaks = input$bins) }) } 이후 이 파일을 shinyserver 폴더에 하위 폴더로 복사 합니다. 터미널에서 실행해 주세요 (cp: copy, -rf : room and file 모두) sudo cp -rf /home/dspub/project/testapp /srv/shiny-server/ 이후 자신의 IP와 shinyserver 포트 를 이용하고 하위 폴더 를 넣어 접속하세요 ip:3838/testapp local server 에 등록 21.4.1 과제 자신의 app을 server에 올리고 주소 링크를 보내주세요. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
