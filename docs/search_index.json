[["statistical-plot-with-ggplot2.html", "Chapter 11 Statistical Plot with ggplot2 11.1 T-test and Chisq-test Visualization 11.2 Odds ratio and 95% confidence interval 11.3 Multilevel and Labelled Data", " Chapter 11 Statistical Plot with ggplot2 This chapter will discuss about visualization focus on visualization of statistical summary. I will introduce how to easily visualize of T-test, chi square test, regression and logistic regression with adding of significance level. ## Prerequisite rm(list=ls()) #basic requirment if(!require(&quot;tidyverse&quot;)) install.packages(&quot;tidyverse&quot;) if(!require(&quot;htmlTable&quot;)) install.packages(&quot;htmlTable&quot;) if(!require(&quot;broom&quot;)) install.packages(&quot;broom&quot;) if(!require(&quot;ggthemes&quot;)) install.packages(&quot;ggthemes&quot;) # packages from github if(!require(&quot;devtools&quot;)) install.packages(&quot;devtools&quot;) library(devtools) install_github(&quot;jinhaslab/tabf&quot;, force = TRUE) library(tabf) The data locate in dspubs.org’s open data . kwcsData1.rds will be used. I made folder name of data and saved the download file into data directory. The way of loading rds data is through the readRDS(pathway). The step of data manipulation is most import task, the chapter Data Manipulation should be reviewed prior to follow this chapter. url &lt;- &quot;https://dspubs.org/webapps/forum/open_data/kwcsDataShort.rds&quot; download.file(url, &quot;data/kwcsDataShort.rds&quot;) dat1 = readRDS(&quot;data/kwcsDataShort.rds&quot;) 11.1 T-test and Chisq-test Visualization You can select variable after data manipulation, we created sleepgp, shortReturn, njob, sexgp, edugp, empgp in chapter of Data manipulation and Tables for pulblic health 1. Then, those selected variables will categorized into stratas, catVars, conVars. The function of tabf() create cross table by htmlTable(). tabf() function needs data1 as data to be used for table, stratas as group variables in the head, catVars as categorical variables, conVars = continues variables. stratas = c(&quot;sleepgp&quot;) catVars = c(&quot;wwa1gp&quot;, &quot;shortReturn&quot;,&quot;shiftWork&quot; , &quot;njob&quot;, &quot;sexgp&quot;, &quot;edugp&quot;, &quot;empgp&quot;) conVars = c(&quot;AGE&quot;,&quot;satisfaction&quot;) tab1 = tabf(dat1=dat1, stratas = stratas, catVars = catVars, conVars = conVars) tab1 %&gt;% setNames(c(&quot;&quot;, &quot;&quot;, &quot;None&quot;, &quot;Disturbance&quot;, &quot;P value&quot;)) %&gt;% htmlTable( cgroup = c(&quot;&quot;, &quot;Sleep disturbance&quot;, &quot;&quot;), n.cgroup = c(2, 2, 1), tfoot = &quot;P value calculated by Chisq-Test and T-Test&quot;, rnames = FALSE, caption = &quot;Basic Characteristics according to Sleep disturbance&quot; , css.table = &quot;font-family: Times&quot; ) Basic Characteristics according to Sleep disturbance   Sleep disturbance     None Disturbance   P value wwa1gp Never   12222 (94.7%) 684 (5.3%)   &lt;0.001 Rarely   12316 (94.5%) 714 (5.5%)   Sometimes   9112 (90.3%) 981 (9.7%)   Often   3456 (82.8%) 717 (17.2%)   Always   634 (70.0%) 272 (30.0%)   shortReturn non short return   36183 (92.5%) 2927 (7.5%)   &lt;0.001 short return   1557 (77.9%) 441 (22.1%)   shiftWork non shift work   35056 (91.9%) 3073 (8.1%)   &lt;0.001 shift work   2684 (90.1%) 295 (9.9%)   njob one-job   37471 (91.9%) 3317 (8.1%)   &lt;0.001 njob   269 (84.1%) 51 (15.9%)   sexgp Men   17892 (93.1%) 1327 (6.9%)   &lt;0.001 Women   19848 (90.7%) 2041 (9.3%)   edugp university or more   19597 (92.9%) 1502 (7.1%)   &lt;0.001 high school   14943 (91.9%) 1318 (8.1%)   middle school or below   3200 (85.4%) 548 (14.6%)   empgp paid-worker   25786 (92.4%) 2122 (7.6%)   &lt;0.001 employer/self-employer   2539 (91.7%) 229 (8.3%)   own-account worker   8359 (90.5%) 880 (9.5%)   unpaind family work   1056 (88.5%) 137 (11.5%)   AGE   46.8±12.4 49.7±11.9   &lt;0.001 satisfaction   2.1±0.5 2.4±0.6   &lt;0.001 P value calculated by Chisq-Test and T-Test T-test The mean level of age are differ according to sleep disturbance. Box plot show mean and distribution of values. There are two method of t.test in R. One is using two vector, and the other is using of relationship. #stratas = &quot;sleepgp&quot; age1 = dat1$AGE[dat1$sleepgp ==&quot;0.non distrubance&quot;] age2 = dat1$AGE[dat1$sleepgp ==&quot;1.sleep disturbance&quot;] t.test(age1, age2) ## ## Welch Two Sample t-test ## ## data: age1 and age2 ## t = -13.409, df = 4040.8, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -3.306275 -2.462776 ## sample estimates: ## mean of x mean of y ## 46.77878 49.66330 t.test(dat1$AGE ~ dat1$sleepgp) ## ## Welch Two Sample t-test ## ## data: dat1$AGE by dat1$sleepgp ## t = -13.409, df = 4040.8, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means between group 0.non distrubance and group 1.sleep disturbance is not equal to 0 ## 95 percent confidence interval: ## -3.306275 -2.462776 ## sample estimates: ## mean in group 0.non distrubance mean in group 1.sleep disturbance ## 46.77878 49.66330 T test’s p-value can be generated by following pipe code. ttestPvalue &lt;- dat1 %&gt;% select(sleepgp, AGE) %&gt;% pivot_longer(-sleepgp) %&gt;% nest(dat=-name) %&gt;% mutate(fit =map(dat, ~t.test(.$value ~ .$sleepgp)), tidied =map(fit, tidy)) %&gt;% unnest(tidied) %&gt;% select(name, p.value) %&gt;% mutate(pvalue = ifelse(p.value &lt; 0.001, &quot;&lt;0.001&quot;, sprintf(&quot;%.3f&quot;, p.value))) %&gt;% pull(pvalue) dat1 %&gt;% select(sleepgp, AGE) %&gt;% ggplot(aes(x=sleepgp, y= AGE)) + geom_boxplot() dat1 %&gt;% select(sleepgp, AGE) %&gt;% ggplot(aes(x=sleepgp, y= AGE)) + geom_boxplot() + ggtitle(&quot;Age according to sleep disturbance&quot;)+ xlab(&quot;Sleep Disturbance&quot;) + theme(text=element_text(family=&quot;Times&quot;)) dat1 %&gt;% select(sleepgp, AGE) %&gt;% ggplot(aes(x=sleepgp, y= AGE)) + geom_boxplot() + ggtitle(&quot;Age according to sleep disturbance&quot;)+ xlab(&quot;Sleep Disturbance&quot;) + annotate( geom =&quot;text&quot;, -Inf, Inf, hjust=-3, vjust=5, label =sprintf(&quot;P value: %s&quot;, ttestPvalue), family = &quot;Times&quot; ) + theme(text=element_text(family=&quot;Times&quot;)) Chisq Test wwa1gp is “A. kept worrying about work when you were not working”, and the response is 0.Never, 1.Rarely, 2.Sometimes, 3.Often and 4.Always. In the previous table, the distribution of sleep distrubance are differ according to wwa1gp. The bar chart is one of the best option for distribution visualization. dat1 %&gt;% group_by(wwa1gp) %&gt;% count(sleepgp) %&gt;% mutate(prob = n/sum(n)*100, prob = round(prob, 1)) %&gt;% filter(sleepgp ==&quot;1.sleep disturbance&quot;) %&gt;% ggplot(aes(x=wwa1gp, y = prob)) + geom_bar(stat=&quot;identity&quot;) Some modification are needed to communicat to other researcher. Percent scale are easy to follow. dat1 %&gt;% group_by(wwa1gp) %&gt;% count(sleepgp) %&gt;% mutate(prob = n/sum(n)*100, prob = round(prob, 1)) %&gt;% filter(sleepgp ==&quot;1.sleep disturbance&quot;) %&gt;% ggplot(aes(x=wwa1gp, y = prob)) + theme(text=element_text(family=&quot;Times New Roman&quot;, face=&quot;bold&quot;, size=12)) + xlab(&quot;kept worrying about work when you were not working&quot;) + ylab(&quot;Sleep Disturbance (proportion)&quot;) + ylim(0, 0.35)+ geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = sprintf(&quot;%s%%&quot;, prob)), vjust = -0.5) + scale_y_continuous(labels = function(x) sprintf(&quot;%s%%&quot;, round(x))) Now, we added the p value of chisq.test(). chisqp = dat1 %&gt;% select(wwa1gp, sleepgp) %&gt;% table() %&gt;% chisq.test() if (chisqp$p.value &lt;0.001){ pChisqV = &quot;&lt;0.001&quot; } else{ pChisqV = chisqp$p.value %&gt;% sprintf(&quot;%.3f&quot;, .) } pChisqV ## [1] &quot;&lt;0.001&quot; #library(extrafont) library(ggthemes) dat1 %&gt;% group_by(wwa1gp) %&gt;% count(sleepgp) %&gt;% mutate(prob = n/sum(n)*100, prob = round(prob, 1)) %&gt;% filter(sleepgp ==&quot;1.sleep disturbance&quot;) %&gt;% ggplot(aes(x=wwa1gp, y = prob)) + xlab(&quot;kept worrying about work when you were not working&quot;) + ylab(&quot;Sleep Disturbance (proportion)&quot;) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = sprintf(&quot;%s%%&quot;, prob)), vjust = -0.5) + scale_y_continuous(labels = function(x) sprintf(&quot;%s%%&quot;, round(x))) + annotate( geom =&quot;text&quot;, -Inf, Inf, hjust=-0.5, vjust=8, label =sprintf(&quot;P value: %s&quot;, pChisqV), family = &quot;Times New Roman&quot;, fontface = &quot;bold&quot; ) + theme_minimal() + theme(text=element_text(family=&quot;Times New Roman&quot;, face=&quot;bold&quot;, size=12)) 11.2 Odds ratio and 95% confidence interval Logistic regression model There are 3 kind of models, model II and III are include more confounding variables compare to model I. mod1 = dat1 %&gt;% glm(data=.,family=&quot;binomial&quot;,formula = sleepgp == &quot;1.sleep disturbance&quot; ~ wwa1gp) mod2 = dat1 %&gt;% glm(data=.,family=&quot;binomial&quot;,formula = sleepgp == &quot;1.sleep disturbance&quot; ~ wwa1gp + AGE + sexgp +satisfaction) mod3 = dat1 %&gt;% glm(data=.,family=&quot;binomial&quot;,formula = sleepgp == &quot;1.sleep disturbance&quot; ~ wwa1gp + AGE + sexgp +satisfaction + shiftWork + njob) oddf0() function gives us odds ratio, lower limt and upper limit (95% confidence interval). We can draw OR (95% CI) plot, using errobar() function. we can also change the color using RGB triplet (ref: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)). oddf0(mod1) %&gt;% ggplot(aes(y=values, x = or)) + theme_classic() + geom_errorbarh(aes(xmin = ll, xmax = ul), height = 0.09, color = &quot;#666666&quot;, size=0.5) + geom_point(shape = 15, size = 2, color = &quot;#444444&quot;) + geom_vline(xintercept = 1, color = &quot;#FF0000&quot;, linetype = &quot;dashed&quot;, cex =0.5, alpha = 0.5) + ylab(&quot;kept worrying about work when you were not working&quot;) + xlab(&quot;Odds Ratio and 95% Confidence Interval of Sleep Dsturbance&quot;) + theme(text = element_text(family =&quot;Times&quot;)) Vertical error bar also suitable to plot the OR (95% CI). oddf0(mod1) %&gt;% ggplot(aes(x=values, y = or)) + theme_classic() + geom_errorbar(aes(ymin = ll, ymax = ul), width = 0.07, color = &quot;#666666&quot;, size=0.5) + geom_point(shape = 15, size = 2.5, color = &quot;#444444&quot;) + geom_hline(yintercept = 1, color = &quot;#FF0000&quot;, linetype = &quot;dashed&quot;, cex =0.5, alpha = 0.5) + xlab(&quot;Kept worrying about work when you were not working&quot;) + ylab(&quot;Odds Ratio and 95% Confidence Interval of Sleep Dsturbance&quot;) + theme(text = element_text(family =&quot;Times&quot;)) 11.3 Multilevel and Labelled Data 11.3.1 introduction In current data, We will used covid19 data from 16 countries. The group is country level and the interesting relationship is regarded on individual economic activity and psychological symptoms. In this chapter, we will discuss about how can visualization multi-level data (The original data are own to Laura, PH.D.) if(!require(&quot;tidyverse&quot;)) install.packages(&quot;tidyverse&quot;) if(!require(&quot;ggthemes&quot;)) install.packages(&quot;ggthemes&quot;) if(!require(&quot;ggrepel&quot;)) install.packages(&quot;ggrepel&quot;) if(!require(&quot;gridExtra&quot;)) install.packages(&quot;gridExtra&quot;) url &lt;- &quot;https://dspubs.org/webapps/forum/open_data/CovidJobLoss.rds&quot; download.file(url, &quot;CovidJobLoss.rds&quot;) mm3 = readRDS(&quot;data/CovidJobLoss.rds&quot;) url2 &lt;- &quot;https://dspubs.org/webapps/forum/open_data/hdi.csv&quot; download.file(url2, &quot;data/hdi.csv&quot;) hdi = read_csv(&quot;data/hdi.csv&quot;)%&gt;% setNames(c(&#39;rank&#39;, &#39;country&#39;, &#39;y2019&#39;, &#39;country_1&#39;)) url3 &lt;- &quot;https://dspubs.org/webapps/forum/open_data/covid_agu1.csv&quot; download.file(url3, &quot;data/covid_agu1.csv&quot;) agu1 &lt;- read_csv(&#39;data/covid_agu1.csv&#39;) Data manipulation for creating and reshaping variables. We will exam the assoicaton between human development index and covid related outcomes. mm4 &lt;- mm3 %&gt;% mutate(agegp3 = ifelse(age &lt;=40, &#39;≤40&#39;, &#39;&gt;40&#39;)) %&gt;% mutate(agegp3 = factor(agegp3, levels=c(&#39;≤40&#39;, &#39;&gt;40&#39;))) %&gt;% filter(Education %in% c(1:6)) %&gt;% mutate(edugp = ifelse(Education %in% c(1, 2), 1, # high school or less ifelse(Education %in% c(3),2, # college ifelse(Education %in% c(4), 3, 4)))) %&gt;% # university (5, 6) Graduate school mutate(edugp2 = ifelse(Education %in% c(1, 2, 3), 1, 2)) %&gt;% mutate(EcLossAllgp = ifelse(EcLossAll ==0, 0, 1)) #%&gt;% mm4.0 = mm4 %&gt;% # hid: human development index for each countries left_join(hdi %&gt;% filter(!is.na(country_1)) %&gt;% rename(country_source = country, country=country_1 ), by = c(&#39;country&#39;)) %&gt;% mutate(y2019 = ifelse(country_c ==&#39;South Korea&#39;, 0.916, y2019)) 11.3.2 Data analysis start 11.3.2.1 job loss due to COVID19, psychological aggravation according to Gender Explore data using basic static for job loss prevalence across country and genders. the pyschological aggravation due to covid-19 are also plotted according to same logic. fig1 &lt;- mm4 %&gt;% group_by(country_c, gender) %&gt;% count(EcLossAllgp) %&gt;% mutate(prob = n/sum(n)) %&gt;% filter(EcLossAllgp == 1 ) %&gt;% ggplot(aes(x = gender, y = prob, fill = gender)) + geom_bar(stat = &quot;identity&quot;)+ xlab(&quot;&quot;)+ ylab(&quot;Job loss due to COVID19&quot;)+ scale_y_continuous(labels = function(x) paste0(x*100, &quot;%&quot;))+ facet_wrap(country_c ~., nrow = 3) + theme_minimal()+ theme(text = element_text(size=17))+ theme(legend.position = c(.92, .1)) fig2 &lt;- mm4 %&gt;% group_by(country_c, gender) %&gt;% count(TotalDepAnx) %&gt;% mutate(prob = n/sum(n)) %&gt;% filter(TotalDepAnx == 1 ) %&gt;% ggplot(aes(x = gender, y = prob, fill = gender)) + geom_bar(stat = &quot;identity&quot;)+ ylab(&quot;Psychological aggravation due to COVID19&quot;)+ xlab(&#39;Gender&#39;)+ scale_y_continuous(labels = function(x) paste0(x*100, &quot;%&quot;))+ facet_wrap(country_c ~., nrow = 3) + theme_minimal()+ theme(text = element_text(size=17))+ theme(legend.position = c(.92, .1)) Save total figure of fig1 and fig2. arrageGrob make two figures into the one figure. ggsave(arrangeGrob(fig1, fig2, ncol = 1), file =&#39;results/covid/figtotal.png&#39;, dpi = 300, width = 10, height =14) ggsave(arrangeGrob(fig1, fig2, ncol = 1), file =&#39;results/covid/tiff/figtotal.tiff&#39;, dpi = 300, width = 10, height =14) 11.3.2.2 job loss, psychological aggravation according to age group fig3 &lt;- mm4.0 %&gt;% #filter(!country %in% c(16, 173)) %&gt;% group_by(country_c, gender, agegp2) %&gt;% count(EcLossAllgp) %&gt;% mutate(prob = n/sum(n)) %&gt;% filter(EcLossAllgp == 1) %&gt;% ggplot(aes(x = agegp2, y = prob, color = gender)) + geom_point(aes(size = n), alpha = 0.2, show.legend = FALSE) + geom_smooth(method = &#39;loess&#39;, span =0.9, se=FALSE) + ylab(&quot;Job loss due to COVID19&quot;)+ scale_y_continuous(labels = function(x) paste0(x*100, &quot;%&quot;))+ theme_minimal() + xlab(&quot;&quot;)+ labs(color = &quot;Gender&quot;) + facet_wrap(country_c~., nrow =3)+ theme(legend.position = c(.92, .1))+ theme(text = element_text(size=17))+ scale_x_continuous(breaks = c(2,4,6,8), labels = c(30,40,50,60)) fig4 &lt;- mm4.0 %&gt;% #filter(!country %in% c(16, 173)) %&gt;% group_by(country_c, gender, agegp2) %&gt;% count(TotalDepAnx) %&gt;% mutate(prob = n/sum(n)) %&gt;% filter(TotalDepAnx == 1) %&gt;% ggplot(aes(x = agegp2, y = prob, color = gender)) + geom_point(aes(size = n), alpha = 0.2, show.legend = FALSE) + geom_smooth(method = &#39;loess&#39;, span =0.9, se=FALSE) + ylab(&quot;Psychological aggravation due to COVID19&quot;)+ scale_y_continuous(labels = function(x) paste0(x*100, &quot;%&quot;))+ theme_minimal() + xlab(&quot;Age (size = number of respondents)&quot;) + labs(color = &quot;Gender&quot;) + facet_wrap(country_c~., nrow =3)+ theme(legend.position = c(.92, .1))+ theme(text = element_text(size=17))+ scale_x_continuous(breaks = c (2,4,6,8), labels = c(30,40,50,60)) save figures #figtotal2 &lt;- grid.arrange(fig3, fig4, ncol = 1) ggsave(arrangeGrob(fig3, fig4, ncol = 1), file =&#39;results/covid/figtotal2.png&#39;, dpi = 300, width = 10, height =14) ggsave(arrangeGrob(fig3, fig4, ncol = 1), file =&#39;results/covid/tiff/figtotal2.tiff&#39;, dpi = 300, width = 10, height =14) 11.3.3 job loss, psychological aggravation according to Education level Quzi 1 Let’s fill the { num } to draw following figure. fig5 &lt;- mm4.0 %&gt;% group_by(edugp, country_c, gender) %&gt;% count(EcLossAllgp ) %&gt;% mutate(prob = n/sum(n)) %&gt;% filter(EcLossAllgp == 1) %&gt;% ggplot(aes(x = {1} , y ={2} , color = {2})) + geom_smooth(method = {3}, span =0.9, se = FALSE) + scale_x_continuous(labels=c(&quot;1&quot; = &quot;≤H&quot;, &quot;2&quot; = &quot;C&quot;, &quot;3&quot; = &quot;U&quot;, &quot;4&quot; = &quot;G&quot;)) + theme_minimal() + labs(color = {4}) + ylab(&quot;Job Loss due to COVID19&quot;) + xlab(&quot;&quot;)+ facet_wrap({5})+ theme(text = element_text(size=17))+ theme(legend.position = c(.92, .1)) # mm4 %&gt;% # count(TotalDepAnx) fig6 &lt;- mm4.0 %&gt;% group_by(edugp, country_c, gender) %&gt;% count(TotalDepAnx ) %&gt;% mutate(prob = n/sum(n)) %&gt;% filter(TotalDepAnx == 1 ) %&gt;% ggplot(aes({6})) + geom_smooth({7}) + scale_x_continuous({8}) + theme_minimal() + ylab(&quot;Psychological aggravation due to COVID19&quot;) + scale_y_continuous(labels = {9})+ xlab(&quot;H = high school, C = college, U = university, G = graduate &quot;) + labs(color = &quot;Gender&quot;) + facet_wrap({10})+ theme(text = element_text(size=17))+ theme(legend.position = c(.92, .1)) save figure #figtotal3 &lt;- grid.arrange(fig5, fig6, ncol = 1) ggsave(arrangeGrob(fig5, fig6, ncol = 1), file =&#39;results/covid/figtotal3.png&#39;, dpi = 300, width = 10, height =14) ggsave(arrangeGrob(fig5, fig6, ncol = 1), file =&#39;results/covid/tiff/figtotal3.tiff&#39;, dpi = 300, width = 10, height =14) knitr::include_graphics(&#39;results/covid/figtotal3.png&#39;) 11.3.4 Visulization with human develop index stratification Labelled data visualization need the code of `geom_label_repel’ agu1 &lt;- read_csv(&#39;data/covid/covid_agu1.csv&#39;) lab_mm &lt;- mm4.0 %&gt;% left_join(agu1, by = &#39;country_c&#39;) %&gt;% mutate(inc_aug = c_case_agu1 / population *100000, dth_aug = c_death_agu1/ population *100000) %&gt;% group_by(country_c, gender) %&gt;% summarize(hdi = mean(y2019), Psycho = mean(TotalDepAnx ==1), ecl = mean(EcLossAll !=0), inc = mean(inc_aug)) lab_mm%&gt;% ggplot(aes(x = hdi, y = ecl, color = inc)) + geom_point() + theme_classic()+ xlab(&quot;Human Devlopment Index&quot;) + #ylab(&quot;prevalance of Psychological Symptoms&quot;) + ylab(&quot;prevalance of Economic Loss due to COVID19&quot;) + #ylim(c(-0.1, 1)) + #xlim(c(2, 4)) + geom_label_repel(aes(label = country_c), fill = NA, # 투명하게 해서 겹쳐도 보이게 alpha =1, size = 3, # 작게 box.padding = 0.4, # 분별해서 segment.size =0.1, # 선 force = 2) + # 이것은 무엇일까요? theme_minimal() + geom_smooth(method = &#39;lm&#39;, formula = y ~ poly(x,2), se=FALSE) + #geom_smooth( se=FALSE) + facet_wrap(gender~.) + guides(color = &quot;none&quot;) Quiz 2, The Education level may affect the relationship between hdi and economic loss status. please draw following plot, and find the most vulnerable population. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
